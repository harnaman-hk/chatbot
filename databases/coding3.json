{
     "intents": [
          {
               "tag": "Flask-WTF",
               "patterns": [
                    "Mention what is Flask-WTF and what are their features?"
               ],
               "responses": [
                    "Flask-WTF offers simple integration with WTForms.  Features include for Flask WTF are\nIntegration with wtforms\nSecure form with csrf token\nGlobal csrf protection\nInternationalization integration\nRecaptcha supporting\nFile upload that works with Flask Uploads"
               ],
               "context_set": ""
          },
          {
               "tag": "Flask",
               "patterns": [
                    "Explain what is the common way for the Flask script to work?",
                    "Explain how you can access sessions in Flask?",
                    "Explain database connection in Python Flask?"
               ],
               "responses": [
                    "The common way for the flask script to work is it should be the import path for your application Or the path to a Python file",
                    "Flask supports database powered application.Such system requires creating a schema, which requires piping the shema.sql file into a sqlite3 command.  So you need to install sqlite3 command in order to create or initiate the database in Flask.Flask allows to request database in three ways before_request() : They are called before a request and pass no arguments after_request() : They are called after a request and pass the response that will be sent to the client teardown_request(): They are called in situation when exception is raised, and response are not guaranteed. They are called after the response been constructed.  They are not allowed to modify the request, and their values are ignored."
               ],
               "context_set": ""
          },
          {
               "tag": "Memcached",
               "patterns": [
                    "Explain how you can minimize the Memcached server outages in your Python Development?",
                    "Explain how Memcached should not be used in your Python project?"
               ],
               "responses": [
                    "•  Another way is to bring up an instance of Memcached on a new machine using the lost machines IP address\n•  When one instance fails, several of them goes down, this will put larger load on the database server when lost data is reloaded as client make a request. To avoid this, if your code has been written to minimize cache stampedes then it will leave a minimal impact\n•  Code is another option to minimize server outages as it gives you the liberty to change the Memcached server list with minimal work\n•  Setting timeout value is another option that some Memcached clients implement for Memcached server outage. When your Memcached server goes down, the client will keep trying to send a request till the time-out limit is reached.",
                    "•  Memcached common misuse is to use it as a data store, and not as a cache\n•  Never use Memcached as the only source of the information you need to run your application. Data should always be available through another source as well\n•  Memcached is just a key or value store and cannot perform query over the data or iterate over the contents to extract information\n•  Memcached does not offer any form of security either in encryption or authentication"
               ],
               "context_set": ""
          },
          {
               "tag": "Dogpile effect",
               "patterns": [
                    "Explain what is Dogpile effect? How can you prevent this effect?"
               ],
               "responses": [
                    "Dogpile effect is referred to the event when cache expires, and websites are hit by the multiple requests made by the client at the same time.\nThis effect can be prevented by using semaphore lock. In this system when value expires, first process acquires the lock and starts generating new value."
               ],
               "cpntext_set": ""
          },
          {
               "tag": "Python",
               "patterns": [
                    "How do we interpret Python?",
                    "What is a Python decorator?",
                    "What is Lambda in Python?"
               ],
               "responses": [
                    "The source code that the programmer writes converted into language that is then translated into a language that needs to be executed by a machine.\nPython language is an interpreted language. The program runs directly from the source code and converts",
                    "A Python decorator is a specific change that is made in Python syntax to effortlessly modify functions.",
                    "Lambda is a single expression anonymous function that is mostly used as inline function."
               ]
          },
          {
               "tag": "list and tuple",
               "patterns": [
                    "What is the difference between list and tuple?"
               ],
               "responses": [
                    "While list is mutable, tuple is not. One can hash tuple, for instance, as a key for dictionaries."
               ],
               "context_set": ""
          },
          {
               "tag": "dict and list",
               "patterns": [
                    "What are Dict and List Comprehensions?"
               ],
               "responses": [
                    "These are syntax constructions that help to simplify the creation of a dictionary or list based on iterable that already exists."
               ],
               "context_set": ""
          }
     ]
}